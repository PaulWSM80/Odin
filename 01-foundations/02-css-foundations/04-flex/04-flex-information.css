body {
    font-family: 'Courier New', Courier, monospace;
}

img {
    width: 100px;
    height: 100px;
}

.title {
    font-size: 36px;
    font-weight: 900;
}

/* do not edit this footer */
.footer {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    height: 52px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #eee;
}

/*  == INITIAL SOLUTION == */

/* .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 32px;
}

.sections {
    display: flex;
    gap: 52px;
}

.card {
    display: flex;
    flex-direction: column;
    width: 200px;
    gap: 8px;
    align-items: center;
}

.text {
    text-align: center;
} */

/*
This does work. However, the provided solution - with the title centred as text
rather than inside a div - seems significantly more elegant. Therefore: an
attempt to refactor for this paradigm follows...
*/

/*  == REFACTOR == */

body {
    text-align: center;
}

.title {
    margin-bottom: 32px;
}

.container {
    display: flex;
    justify-content: center;
    gap: 52px;

}

.info {
    width: 200px;
}

/*
For this particular scenario, the refactored css is definitely less cumbersome.
It will likely depend on modularity of overall site.
*/
